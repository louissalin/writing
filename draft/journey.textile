---
layout: post
title: My Journey as a Software Developer: the early years
---
<title>{{ page.title }}</title>

It started a long time ago when my dad bought an IBM PC 286 with a 20 MB hard disk and 256K of RAM. I was in 6th grade and I mainly used the machine to play King's Quest IV. I also got to see my dad try to fix problems that he had somehow caused while on the phone with my uncle, the computer expert in the family. I learned that computers were obedient, but brittle, that it was easy to screw things up. A little later, my family enrolled me into computer classes after school where I learned to program in Basic. From then on, I think it became *my* computer. I was on it constantly, writing stupid little programs, borrowing books at the library that had pages and pages of game code I could reproduce. I marvelled at the "peek" and "poke" instructions and how they made things appear differently on the screen. I reproduced, copied and had a lot of fun but I never seeked to understand and this "flaw" would set the stage to always chasing after people who knew and understood more than me.

In 7th grade I tried learning C. I borrowed books at the school library and read them on my way home every night. It didn't work. I couldn't understand and to be honest, I found the programming examples in the book very boring. I would spend the next three years hanging out in the computer lab, goofing around doing I don't know what. I'd spend a lot of time at home on my computer, playing games, learning DOS, experimenting.

In 10th grade, we started learning Pascal. Things then got a bit more serious. I wrote a simple game, attempted a 3D labyrinth but failed because I didn't know you should design the level as a data structure that a graphics engine would render on the screen. I also noticed that other knew much more than me. Some kids were writing games involving the mouse! You could press buttons! Our programs weren't Windows programs. There was no event loop and no way that I knew of for the mouse to interact with the program. How did they do it?

I was also extremely self-conscious of my image. I was a geek, but not as much as these other kids. I didn't want to be seen with them. My situation wasn't great, but it wasn't bad either. I was kinda left alone. So I had to rely on other people to discover the secrets that these kids used which resulted in a bunch of us to purchase the PC Bible, a book that described everything about PCs, including how to communicate with the hardware via interrupts and registers. This was too complicated for me. I remember leafing through the book, disapointed that I couldn't understand it at once. Eventually a friend wrote a library to use the mouse and I started using it. But by then, most of the year had gone by and I hadn't tried to understand anything.

I don't remember much about the following years except that I was hanging out on BBSes and probably driving my mom crazy. If I was home, that meant I was using the phone line. Eventually, I finally upgraded to a pentium computer and spent the next few years being a power user. I wouldn't code anymore, just go online and play games. I didn't take more computer classes and simply coasted. I even went to college to start a major in history.

Thank God I didn't finish that major! I realized I wasn't on the right track and decided to go back to programming. There was a neat computer science program in a university not too far away that mixed up classes with paid interships that took three and a half years to complete without any summer vacation. But to make it, I'd first have to take three math classes that were pre-requisites which I'd have to take at night and during the summer. I ended up acing all three classes and headed out to a new university out of town, which also meant I didn't have to live with my parents anymore! I became very excited and motivated in the few months prior to starting my computer science degree and finally sat down and learned C. I was pleasantly surprised as to how easy it was, really! 

College was fun. I have very fond memories of my time there but I can't pin point anything that made me a better developer there. I learned a ton of stuff. I was blown away by some classes like functional programming, compilers, operating systems, assembly, computer graphics and device drivers. I was also bored to tears by some classes like statistics (which I developed an interest for recently. It's funny how these things happen,) distributed computing, databases and some theoretical computing classes. But most of all, I feel like college did not prepare me for the real world and thus didn't do anything for my personal growth as a programmer.

